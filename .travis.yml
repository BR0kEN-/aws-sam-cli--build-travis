os: linux
dist: xenial
language: python

python:
  - 3.7

cache:
  - pip

env:
  jobs:
    # Test the Latest SAM CLI (1.0.0 at the moment of writing).
    - SAM_RUNTIME=nodejs12.x SAM_VERSION="" DOCKER_PULL_BEFORE=no
    - SAM_RUNTIME=nodejs12.x SAM_VERSION="" DOCKER_PULL_BEFORE=yes
    - SAM_RUNTIME=python3.7 SAM_VERSION="" DOCKER_PULL_BEFORE=no
    - SAM_RUNTIME=python3.7 SAM_VERSION="" DOCKER_PULL_BEFORE=yes
    # The latest working version where explicit "docker pull" isn't needed.
    - SAM_RUNTIME=nodejs12.x SAM_VERSION="==0.53.0" DOCKER_PULL_BEFORE=no
    - SAM_RUNTIME=python3.7 SAM_VERSION="==0.53.0" DOCKER_PULL_BEFORE=no

install:
  # Upgrade Docker to the latest available version to show that it is not a Docker-related issue.
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - docker info
  # Install AWS SAM CLI.
  - pip3 install "aws-sam-cli$SAM_VERSION"
  # Show disk space.
  - df -H

script:
  - docker images --format '{{.ID}}' | xargs -I {} docker image inspect {}
  # Download the image manually and "sam build" will work.
  - |
    if [[ "$DOCKER_PULL_BEFORE" == "yes" ]]; then
        docker pull "amazon/aws-sam-cli-build-image-$SAM_RUNTIME"
    fi
  - sam build --use-container --debug --template "sam--$SAM_RUNTIME.yml"
  - docker images --format '{{.ID}}' | xargs -I {} docker image inspect {}
